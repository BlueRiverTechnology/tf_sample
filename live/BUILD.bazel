load("//build:tf.bzl", "tf_apply", "tf_init", "tf_module", "tf_plan", "tf_provider")

tf_provider(
    name = "aws",
    alias = "registry.terraform.io/hashicorp/aws/4.55.0/linux_amd64/terraform-provider-aws",
    plugin = "@terraform_provider_aws//:terraform-provider-aws_v4.55.0_x5",
)

# TODO Add tf_module that collects sources, dependencies and providers
tf_module(
    name = "module",
    srcs = [
        "main.tf",
        "provider.tf",
        "//app",
    ],
    marker = ".tf_module",
    providers = [
        ":aws",
    ],
)

# "bazel run :init" generates lock file. It has to be stored under source control.
tf_init(
    name = "init",
    module = ":module",
)

# TODO: plan depends on the remote state in AWS. Is there a way to check that it did not changed
# during the build stage?

# "bazel build :plan' should call terraform plan and generate tfplan file.
tf_plan(
    name = "plan",
    srcs = [
        "main.tf",
        "//app",
    ],
    lock = ".terraform.lock.hcl",
    provider = "provider.tf",
    providers = [
        ":aws",
    ],
)

# "bazel run :apply" should load tfplan and call terraform apply.
tf_apply(
    name = "apply",
    plan = ":plan",
)
